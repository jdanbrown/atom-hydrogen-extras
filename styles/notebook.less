// TODO Any way to set this from editor.preferredLineLength?
@notebook-width: 120ch;

// e.g. pydub.AudioSegment._repr_html_
audio {
  width: @notebook-width;
}

cell-marker-div {
  border-top: 1px solid red;
  height: 10px;
}

.notebook-code-highlight {
  // TODO Clean up (+ lib/index.js)
  &.cell-delim.region { // .region and not .highlight [what is .highlight? why do they both exist?]
    // background: #404040; // [TODO vs. border-bottom?] Same as status-bar, tab-bar, etc.
    border-bottom: 1px solid #404040; // [TODO vs. background?] Great UX until you add outputs...
    // border-top: 1px solid #404040;
    // box-shadow is outside, unlike border-top, more like outline (which has no *-top)
    // box-shadow: 0 -1px 0 #404040;
    // box-shadow: 0 -1ch 0 #404040;
    // height: 1px !important; margin-top: 1ch; // Pretty! But confusing when text editing? Cuts through a buffer row...
    // width: 120.5ch; // TODO Desirable? [TODO Why is 120ch too narrow?]
  }
  &.pending {
    // background: fade(#ffffff, 37.5%); // Between 25% and 50% [TODO Status quo]
    // background: rgba(44,162,95, .3); // TODO
    // background: rgba(145,207,96, .25);
    // background: rgba(33,102,172, 0.5);
    background: rgba(31,120,180, 0.4); // Good blue [TODO Trying it out...]
    // background: rgba(51,160,44, 0.35); // Good green
    // background: rgba(255,255,153, 0.3); // Ok yellow
    // background: rgba(255,255,55, 0.35); // Better yellow
  }
}

.notebook-result-container {

  text-align: left;

  .notebook-result {
    // border-top: 1px solid white; border-bottom: 1px solid white;
    // outline: 1px solid white;
    // padding-left: 2ch;

    border-radius: 0;
    // background: lighten(#000000, 25%); // TODO Status quo, messing with cell delims
    background: lighten(#000000, 15%);
    background: #202020; // 1/2 of #404040 (.cell-delim background)
    &.pending {
      // background: fade(#6871ff, 80%); // Nope...
      // background: fade(#de935f, 50%); // Nope...
      // background: fade(#5ffa68, 50%); // Nope...
      // background: fade(#ffffff, 50%); // Good: same as .notebook-code-highlight [TODO Status quo]
      background: rgba(255,255,55, 0.35); // Ok yellow [TODO Trying it out...]
    }
    &.ok {
      // background: lighten(#000000, 15%); // Too hard to see single lines of output intermixed with code lines
      // background: lighten(#000000, 25%);
    }
    &.error {
      // background: fade(#ff6e67, 80%); // Pretty, but probably too bright to be useful
      // background: fade(#ff6e67, 40%); // Dull, but I think visible enough
      // background: lighten(#000000, 25%);
      // border: 0px solid #ff6e67;
      // border-bottom-width: 1ch;
      border: 0px solid red;
      border-left-width: 1ch; // TODO Like a gutter in spirit, but still visible if the user turned them off...
    }

    .notebook-result-text {
      // Restrict only to text elems (e.g. it messes up df div's if you apply it everywhere inside .notebook-result)
      white-space: pre;
    }
    .notebook-result-text.stream-stderr {
      // background: fade(#ff6e67, 80%); // Pretty, but probably too bright to be useful
      background: fade(#ff6e67, 40%); // Dull, but I think visible enough
    }

    img, svg {
      max-width: @notebook-width;
      height: auto;
      // XXX Allow images to have transparency
      //  - Motivating example: audio spectrograms as raw images via plt.imshow/pillow
      //  - Require user to config mpl/sns/etc. to avoid transparency where undesired
      // background: white; // For mpl/sns images which have transparent borders, for some reason
    }

    // Horizontally scroll block decorations wider than the editor
    //  - TextEditor doesn't get wider with wide decorations. Looks like the code tracks height but not width:
    //    - https://github.com/atom/atom/blob/572aec7/src/text-editor-component.js#L2558-L2569
    //  - Block decorations only added recently: https://github.com/atom/atom/issues/6156
    //    - Looks like the original intent was "full width of the editor"? I wonder if they'd be receptive to a PR?
    overflow: scroll;

  }

  // Make links look like normal browser links
  a {
    color: rgb(0, 112, 224);
    text-decoration: underline;
  }

}

// pd.DataFrame / R data.frame
//  - pd.DataFrame is a table.dataframe, but R data.frame is just a table with no better selector :/
//  - FIXME This will break any other type of table that jupyter kernels try to give us...
//  - TODO Figure out a way to only apply the looser selector (table) when running an R kernel
.notebook-result {
  table {
    border: 0px;
    thead,
    tbody {
      tr th {
        color: darken(#ffffff, 50%);
      }
    }
    tr {
      th, td {
        border: 0px;
        white-space: nowrap;
        vertical-align: top;
        &:not(:first-child) {
          padding: 0 0 0 2ch;
        }
      }
      td {
        text-align: right; // Assume numbers by default
        // TODO Mixed left/right alignment on df.T with mixed not-number/number -- how to handle gracefully?
        // .not-number { text-align: left; } // Left align stuff that isn't numbers
      }
      th {
        // TODO Until we figure out mixed left/right alignment (above)
        text-align: right;
      }
    }
    tbody tr:nth-child(odd) {
      // background: fade(#ffffff, 10%);
      // background: lighten(#000000, 10%);
      // Neither of these look that great, since the notebook-result bg is already different than the editor bg
    }
    // Hack
    & + p {
      margin-bottom: 0;
    }
  }
}
